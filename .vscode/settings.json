{
  // — Ограничиваем длину и количество вариантов —
  "github.copilot.advanced": {
    "length": 120,
    "inlineSuggestCount": 2,
    "listCount": 5,
    "temperature": 0.2,  // Снижено для большей точности
    "stops": {
      "*": ["\n\n\n", "\n# end"],
      "python": ["\n\n#", "\nif __name__ ==", "\n\n\n"],
      "dockerfile": ["\n\n#"],
      "yaml": ["\n\n"]
    }
  },

  // —— Code Generation ————————————————
  "github.copilot.chat.codeGeneration.instructions": [
    { "text": "КРИТИЧНО: Всегда сохраняй исходные отступы и контекст блока кода" },
    { "text": "Python: СТРОГО 4 пробела на уровень, никогда не смешивай с табами" },
    { "text": "При модификации кода - анализируй весь блок, не только строку" },
    { "text": "Не используй sed-подобные замены - генерируй весь блок заново" },
    { "text": "Пиши только запрошенный фрагмент, максимум 30 строк" },
    { "text": "Для Python соблюдай PEP 8: длина строки ≤88 символов" },
    { "text": "Python: копируй точные отступы из контекста выше и ниже" },
    { "text": "Python: используй trailing comma в многострочных структурах" },
    { "text": "Python: соблюдай правила импортов (stdlib, third-party, local)" },
    { "text": "Для публичных API добавляй docstrings в стиле Google/NumPy" },
    { "text": "Python: используй type hints для всех параметров и возвращаемых значений" }
  ],

  // — Дополнительные настройки для Python форматирования —
  "github.copilot.chat.localePreference": "ru",
  
  // — Специфичные инструкции для Python —
  "github.copilot.chat.python.instructions": [
    { "text": "Всегда используй 4 пробела для отступов, никогда табы" },
    { "text": "Максимальная длина строки 88 символов (Black formatter)" },
    { "text": "Переноси длинные строки с выравниванием по открывающей скобке" },
    { "text": "В многострочных вызовах функций каждый аргумент на новой строке" },
    { "text": "Используй parentheses для многострочных выражений вместо backslash" },
    { "text": "Соблюдай правила пустых строк: 2 перед top-level, 1 внутри классов" }
  ],

  // — Test Generation —
  "github.copilot.chat.testGeneration.instructions": [
    { "text": "Для Python используй pytest с fixture и parametrize" },
    { "text": "Следуй AAA‑паттерну (Arrange‑Act-Assert)" },
    { "text": "Покрывай edge‑кейсы и негативные сценарии" },
    { "text": "Python: используй descriptive test names с test_ префиксом" },
    { "text": "Не генерируй лишний setup — только минимум для теста" }
  ],

  // — Review Selection —
  "github.copilot.chat.reviewSelection.instructions": [
    { "text": "Дай краткий итог. Затем — список рекомендаций с пояснениями" },
    { "text": "Выявляй нарушения SOLID/KISS/YAGNI и PEP 8 для Python" },
    { "text": "Python: проверяй корректность type hints и docstrings" },
    { "text": "Отмечай потенциальные уязвимости (XSS, SQL‑Injection, Race Condition)" },
    { "text": "Предлагай улучшения производительности, если сложность > O(n log n)" }
  ],

  // — Commit Message Generation —
  "github.copilot.chat.commitMessageGeneration.instructions": [
    { "text": "Следуй Conventional Commits 1.0.0 + gitmoji" },
    { "text": "Начинай с маленькой буквы, без точки в конце" },
    { "text": "Если ветка содержит #<номер>, добавь ссылку на issue" },
    { "text": "Сохраняй длину заголовка ≤ 72 символов" }
  ],

  // —— Дополнительные настройки для улучшения работы с Python ——
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": ["--line-length=88"],
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.flake8Args": ["--max-line-length=88"],
  
  // —— Прочее ——————————
  "github.copilot.telemetry.disable": false,
  "github.copilot.editor.inlineSuggest.dismissKey": "escape"
}